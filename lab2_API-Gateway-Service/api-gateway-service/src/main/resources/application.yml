#
#server:
#  port: 8000
#spring:
#  application:
#    name: apigateway-service
#  cloud:
#    gateway:
#      default-filters: # Global Filter
#        - name: GlobalFilter # Global Filter Class name
#          args: # Initialize Global Filter Config class
#            message: Global Filter Start
#            preLogger: true
#            postLogger: true
#      routes:
#        - id: first-service
#          uri: lb://MY-FIRST-SERVICE # 네이밍 서버에서 서비스의 이름으로 검색
#          predicates:
#            - Path=/first-service/**
#          filters:
##            - AddRequestHeader=Test-req-Header,Test # key-value
##            - AddResponseHeader=Test-res-Header, Test
#            - CustomFilter
#        - id: second-service
#          #uri: http://localhost:8082/
#          uri: lb://MY-SECOND-SERVICE # 네이밍 서버에서 서비스의 이름으로 검색
#          predicates:
#            - Path=/second-service/**
#          filters:
##            - AddRequestHeader=Test-req-Header,Test
##            - AddResponseHeader=Test-res-Header, Test
#            - name: CustomFilter
#            - name: LoggingFilter
#              args:
#                message: Logging Filter Message
#                preLogger: true
#                postLogger: true

server:
  port:
    8000
spring:
  application:
    name: api-gateway-service
  cloud:
    gateway:
      routes:
        - id: MY-FIRST-SERVICE
          uri: http://localhost:8081/ # 2. 8081포트에서 처리한다.
          predicates:
            Path=/first-service/** # 1. /first-service로 오는 모든 요청은
        - id: MY-SECOND-SERVICE
          uri: http://localhost:8082/
          predicates:
            Path=/second-service/**
eureka:
  client:
    fetch-registry: false # 단순 테스트를 위해 eureka서버에 등록하지 않음
    register-with-eureka: false # 단순 테스트를 위해 eureka서버에 등록하지 않음
    service-url:
      defaultZone: http://localhost:8761/eureka

